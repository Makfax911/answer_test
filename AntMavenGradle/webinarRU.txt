Сборка Java проектов: быстрый взгляд на Ant, Maven и Gradle

0. Введение

Умение работать с системами сборки нужно каждому Java-разработчику. На вебинаре вы узнаете о системах Apache Ant, Apache Maven и Gradle. Мы опробуем все три на простом Java-проекте: скомпилируем, запустим и протестируем его, собёрем jar файл. Нам понадобятся установленные и настроенные: Java SE DK 8, Apache Ant (1.10.1), Apache Maven (3.5.2), Gradle (4.4)

Будет использован очень простой Java код и Unit тест к нему (демонстрируем код). Работа будет вестись в командной строке.

1. Apache Ant http://ant.apache.org/

Apache Ant (англ. ant — муравей и акроним — «Another Neat Tool») — утилита для автоматизации процесса сборки программного продукта. Появился в 2000 году.

Управление процессом сборки происходит посредством XML-сценария, также называемого Build-файлом. В первую очередь этот файл содержит определение проекта, состоящего из отдельных целей (Targets). Цели сравнимы с процедурами в языках программирования и содержат вызовы команд-заданий (Tasks). Каждое задание представляет собой команду, выполняющую некоторое элементарное действие.

Между целями могут быть определены зависимости (depends) — каждая цель выполняется только после того, как выполнены все цели, от которых она зависит (если они уже были выполнены ранее, повторного выполнения не производится).

Ant позволяет определять собственные типы заданий путём создания Java-классов, реализующих определённые интерфейсы.

Статья Apache Ant - быстрый старт https://habrahabr.ru/post/323204/

Проверяем работу команд:
ant compile
ant run
ant test
ant package
ant clean

2. Apache Maven https://maven.apache.org/

Apache Maven — фреймворк для автоматизации сборки проектов на основе описания их структуры в файлах на языке POM, являющемся подмножеством XML. Название программы, maven, — является словом из языка идиш, смысл которого можно примерно выразить как «собиратель знания». Появился в 2002 году.

Информация для сборки проекта, поддерживаемого Apache Maven, содержится в XML-файле с названием pom.xml. При запуске Maven проверяет, содержит ли конфигурационный файл все необходимые данные и все ли данные синтаксически правильно записаны.

Минимальная конфигурация включает версию конфигурационного файла (modelVersion, 4.0.0), groupId, artifactId и версию. С помощью pom.xml конфигурируются зависимости от других проектов, индивидуальные фазы процесса построения проекта (build process), список плагинов, реализующих порядок сборки.

Maven автоматически генерирует представленную структуру для Java-проекта:
mvn archetype:generate

Проверяем работу команд:
mvn compile
mvn exec:java
mvn test
mvn package
mvn clean

3. Gradle https://gradle.org/

Gradle — система автоматической сборки, построенная на принципах Apache Ant и Apache Maven, но предоставляющая DSL (domain-specific language) на языке Groovy вместо традиционной XML-образной формы представления конфигурации проекта. Появился в 2007 году.

Gradle использует стандартную структуру директорий Maven для исходных кодов и ресурсов, но также позволяет отойти от этого стандарта. Может иметь самый короткий сборочный сценарий:
apply plugin: 'java'

Проверяем работу команд:
gradle compileJava
gradle run
gradle test
gradle build